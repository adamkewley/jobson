<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.github.jobson</groupId>
        <artifactId>jobson-project</artifactId>
        <version>1.0.14</version>
    </parent>

    <artifactId>jobson-docs</artifactId>
    <version>1.0.14</version>
    <packaging>pom</packaging>

    <dependencies>
        <dependency>
            <groupId>com.github.jobson</groupId>
            <artifactId>jobson-swagger-ui</artifactId>
            <version>${version.jobsonswaggerui}</version>
            <type>tar.gz</type>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Unpack API documentation into output -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.github.jobson</groupId>
                                    <artifactId>jobson-swagger-ui</artifactId>
                                    <version>${version.jobsonswaggerui}</version>
                                    <type>tar.gz</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/apidocs</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>install-python-deps</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <exec executable="pip3" failonerror="true">
                                    <arg value="install" />
                                    <arg value="-r" />
                                    <arg value="requirements.txt" />
                                </exec>
                            </target>
                        </configuration>
                    </execution>

                    <execution>
                        <id>compile-sphinx-docs</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <exec executable="make" failonerror="true">
                                    <arg value="html" />
                                </exec>

                                <!-- Rename swagger docs to `apidocs` because the Sphinx docs link to that -->
                                <move file="${project.build.directory}/apidocs/jobson-swagger-ui-${version.jobsonswaggerui}"
                                      tofile="${project.build.directory}/apidocs" />

                                <!-- Copy the swagger docs into html dir -->
                                <copy todir="${project.basedir}/target/html/apidocs">
                                    <fileset dir="${project.build.directory}/apidocs" />
                                </copy>

                                <!-- Copy HTML dir to named dir (for tarballing) -->
                                <copy todir="${project.basedir}/target/${project.artifactId}-${project.version}">
				    <fileset dir="${project.basedir}/target/html" />
				</copy>
                            </target>
                        </configuration>
                    </execution>

                    <execution>
                        <id>package-documentation-into-tarball</id>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <tar basedir="${project.basedir}/target"
                                     includes="${project.artifactId}-${project.version}/**"
                                     longfile="gnu"
                                     destfile="${project.basedir}/target/${project.artifactId}-${project.version}.tar.gz"
                                     compression="gzip" />
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Attach as artifact -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-output-tarball-as-build-artifact</id>
                        <phase>package</phase>
                        <goals>
                            <goal>attach-artifact</goal>
                        </goals>
                        <configuration>
                            <artifacts>
                                <artifact>
                                    <file>
                                        ${project.build.directory}/${project.artifactId}-${project.version}.tar.gz
                                    </file>
                                    <type>tar.gz</type>
                                </artifact>
                            </artifacts>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
